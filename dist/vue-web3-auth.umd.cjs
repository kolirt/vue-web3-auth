(function(t,T){typeof exports=="object"&&typeof module<"u"?T(exports,require("@wagmi/core/chains"),require("vue"),require("@wagmi/core"),require("@web3modal/ethereum"),require("@web3modal/html"),require("js-event-bus")):typeof define=="function"&&define.amd?define(["exports","@wagmi/core/chains","vue","@wagmi/core","@web3modal/ethereum","@web3modal/html","js-event-bus"],T):(t=typeof globalThis<"u"?globalThis:t||self,T(t["vue-web3-auth"]={},t.wagmiCoreChains,t.vue,t.wagmiCore,t.web3modalEthereum,t.web3modalHtml,t.jsEventBus))})(this,function(t,T,r,s,g,$,P){"use strict";function j(e){const n=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(e){for(const i in e)if(i!=="default"){const c=Object.getOwnPropertyDescriptor(e,i);Object.defineProperty(n,i,c.get?c:{enumerable:!0,get:()=>e[i]})}}return n.default=e,Object.freeze(n)}const E=j(T);var N={id:1,network:"homestead",name:"Ethereum",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:{alchemy:{http:["https://eth-mainnet.g.alchemy.com/v2"],webSocket:["wss://eth-mainnet.g.alchemy.com/v2"]},infura:{http:["https://mainnet.infura.io/v3"],webSocket:["wss://mainnet.infura.io/ws/v3"]},default:{http:["https://cloudflare-eth.com"]},public:{http:["https://cloudflare-eth.com"]}},blockExplorers:{etherscan:{name:"Etherscan",url:"https://etherscan.io"},default:{name:"Etherscan",url:"https://etherscan.io"}},contracts:{ensRegistry:{address:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"},ensUniversalResolver:{address:"0xc0497E381f536Be9ce14B0dD3817cBcAe57d2F62",blockCreated:16966585},multicall3:{address:"0xca11bde05977b3631167028862be2a173976ca11",blockCreated:14353601}}};function ee(e){return e}const U=N,a=r.reactive({autoInit:!0,projectId:"",chains:[U],autoConnect:!0,disconnectUnknownChain:!0,reconnectToChain:!0,logEnabled:!1,web3modalOptions:{themeMode:"light",themeVariables:{}}});function F(e){"autoInit"in e&&(a.autoInit=e.autoInit),"projectId"in e&&(a.projectId=e.projectId),"chains"in e&&(a.chains=e.chains),"autoConnect"in e&&(a.autoConnect=e.autoConnect),"disconnectUnknownChain"in e&&(a.disconnectUnknownChain=e.disconnectUnknownChain),"reconnectToChain"in e&&(a.reconnectToChain=e.reconnectToChain),"logEnabled"in e&&(a.logEnabled=e.logEnabled),"web3modalOptions"in e&&("themeMode"in e.web3modalOptions&&(a.web3modalOptions.themeMode=e.web3modalOptions.themeMode),"themeVariables"in e.web3modalOptions&&(a.web3modalOptions.themeVariables=e.web3modalOptions.themeVariables))}const u=r.reactive({bufferChain:null,currentChain:null}),m=r.computed(()=>u.currentChain?u.currentChain:a.chains[0]);function S(){return a.chains}async function D(e){var n;l.value||C(),await((n=I.client)==null?void 0:n.switchNetwork({chainId:e.id}))}async function G(){var e;l.value||C(),await((e=l.value)==null?void 0:e.openModal({route:"SelectNetwork"}))}function y(...e){a.logEnabled&&console.log("[WC]",...e)}var o=(e=>(e.Connected="connected",e.Disconnected="disconnect",e.ChainSwitched="chain_switched",e.UnknownChain="unknown_chain",e.ModalStateChanged="modal_state_changed",e))(o||{});const w=new P;function p(e,...n){e===o.Connected||e===o.Disconnected?(u.currentChain=u.bufferChain,h.currentAccount=h.bufferAccount):e===o.ChainSwitched&&(u.currentChain=u.bufferChain),w.emit(e,null,...n)}function _(e,n){w.on(e,n),a.logEnabled&&y(`Subscribe for ${e} event.`)}function A(e,n){w.detach(e,n),a.logEnabled&&y(`Unsubscribe for ${e} event.`)}const l=r.ref(null);function W(e){var n;l.value=new $.Web3Modal({projectId:a.projectId,...(a==null?void 0:a.web3modalOptions)||[]},e),(n=l.value)==null||n.subscribeModal(({open:i})=>{p(o.ModalStateChanged,i)})}const h=r.reactive({bufferAccount:null,currentAccount:null}),d=r.reactive({connected:!1,address:void 0,shortAddress:void 0});async function k(){await s.disconnect()}async function H(e){var n,i;l.value||C(),e instanceof Event&&(e=a.chains[0]),(n=l.value)==null||n.setDefaultChain(e||a.chains[0]),await((i=l.value)==null?void 0:i.openModal({route:"ConnectWallet"}))}async function q(){var e;l.value||C(),await((e=l.value)==null?void 0:e.openModal({route:"Account"}))}function v(e=""){return`${e.slice(0,5)}...${e.slice(-4)}`}r.watch(()=>h.currentAccount,e=>{e?(d.connected=!0,d.address=e.address,d.shortAddress=v(e.address)):(d.connected=!1,d.address=void 0,d.shortAddress=void 0)});let M;const I=r.reactive({client:null});function b(e){return String(e).toLowerCase()}async function R([e,n],[i,c]){if(a.disconnectUnknownChain&&(!i&&a.disconnectUnknownChain||i)&&n&&!a.chains.some(f=>f.id===n.id)){await k(),c&&(p(o.Disconnected),y(`account ${e.address} disconnected from ${b(c.name)} chain.`)),p(o.UnknownChain,{chain:n}),y("switched to unsupported chain.");return}(i==null?void 0:i.address)!==(e==null?void 0:e.address)&&!(c!=null&&c.unsupported)&&(i&&(p(o.Disconnected),y(`account ${i.address} disconnected from ${b(c.name)} chain.`)),e&&(p(o.Connected,{chain:u.bufferChain,account:h.bufferAccount}),y(`account ${e.address} connected to ${b(n.name)} chain.`))),c&&n&&c.id!==n.id&&(a.reconnectToChain?(p(o.Disconnected),y(`account ${i.address} disconnected from ${b(c.name)} chain.`),p(o.Connected,{chain:u.bufferChain,account:h.bufferAccount}),y(`account ${e.address} connected to ${b(n.name)} chain.`)):(p(o.ChainSwitched,{chain:n}),y(`account ${e.address} switched to ${b(n.name)} chain.`)))}function V([e,n],[i,c]){clearTimeout(M),M=setTimeout(R,200,[e,n],[i,c])}function C(){if(l.value)return;const{publicClient:e}=s.configureChains(r.toRaw(a.chains),[g.w3mProvider({projectId:a.projectId})]),n=s.createConfig({autoConnect:a.autoConnect,connectors:g.w3mConnectors({projectId:a.projectId,version:2,chains:r.toRaw(a.chains)}),publicClient:e});s.watchNetwork(c=>{var f;(f=c.chain)!=null&&f.unsupported&&(c.chain.name="Unsupported"),u.bufferChain=c.chain||null}),s.watchAccount(c=>{h.bufferAccount=c.address?c:null}),r.watch([()=>h.bufferAccount,()=>u.bufferChain],V);const i=new g.EthereumClient(n,r.toRaw(a.chains));I.client=i,W(i)}function L(e){return{install(){F(e),C()}}}function z(e){return s.fetchBalance({chainId:e.chainId||m.value.id,address:e.address,token:e.token,formatUnits:e.formatUnits})}function J(e){return s.fetchBlockNumber({chainId:(e==null?void 0:e.chainId)||m.value.id})}function K(e){return s.fetchToken({chainId:e.chainId||m.value.id,address:e.address,formatUnits:e.formatUnits})}async function O(e){return s.readContract({chainId:e.chainId||m.value.id,address:e.address,abi:e.abi,functionName:e.functionName,args:e.args||[],account:e.account||d.address,blockNumber:e.blockNumber,blockTag:e.blockTag})}async function Q(e){const{hash:n}=await s.writeContract({chainId:e.chainId||m.value.id,address:e.address,abi:e.abi,functionName:e.functionName,args:e.args||[],account:e.account||d.address,gas:e.gas,gasPrice:e.gasPrice,maxFeePerGas:e.maxFeePerGas,maxPriorityFeePerGas:e.maxPriorityFeePerGas,nonce:e.nonce,value:e.value});return s.waitForTransaction({chainId:e.chainId||m.value.id,hash:n,confirmations:e.confirmations||1})}async function X(e){return await s.getPublicClient({chainId:e.chainId||m.value.id}).estimateContractGas({address:e.address,abi:e.abi,functionName:e.functionName,args:e.args||[],account:e.account||d.address,gasPrice:e.gasPrice,maxFeePerGas:e.maxFeePerGas,maxPriorityFeePerGas:e.maxPriorityFeePerGas,nonce:e.nonce,value:e.value})}function Y(e){return s.fetchFeeData({chainId:(e==null?void 0:e.chainId)||m.value.id,formatUnits:e==null?void 0:e.formatUnits})}async function Z(e){const n=[];return e.calls.forEach(i=>{i.calls.forEach(([c,f])=>{n.push({address:i.contractAddress,abi:i.abi,functionName:c,args:f})})}),await s.multicall({chainId:e.chainId,contracts:n,multicallAddress:e.multicallAddress,blockTag:e.blockTag,blockNumber:e.blockNumber,batchSize:e.batchSize,allowFailure:e.allowFailure})}const x=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"},{internalType:"uint8",name:"decimals_",type:"uint8"},{internalType:"uint256",name:"initialBalance_",type:"uint256"},{internalType:"address payable",name:"feeReceiver_",type:"address"}],stateMutability:"payable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],B=[{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall.Call[]",name:"calls",type:"tuple[]"}],name:"aggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes[]",name:"returnData",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockCoinbase",outputs:[{internalType:"address",name:"coinbase",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockDifficulty",outputs:[{internalType:"uint256",name:"difficulty",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockGasLimit",outputs:[{internalType:"uint256",name:"gaslimit",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockTimestamp",outputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"getEthBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"}];t.Chains=E,t.$off=A,t.$on=_,t.Events=o,t.account=d,t.accountDetails=q,t.chain=m,t.connect=H,t.createWeb3Auth=L,t.disconnect=k,t.erc20ABI=x,t.estimateWriteContractGas=X,t.fetchBalance=z,t.fetchBlockNumber=J,t.fetchGasPrice=Y,t.fetchToken=K,t.getAvailableChains=S,t.multicall=Z,t.multicallABI=B,t.readContract=O,t.selectChain=G,t.shortAddressFilter=v,t.switchChain=D,t.writeContract=Q,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});
