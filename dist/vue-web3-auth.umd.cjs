(function(a,p){typeof exports=="object"&&typeof module<"u"?p(exports,require("@wagmi/core/chains"),require("vue"),require("@wagmi/core"),require("@web3modal/ethereum"),require("@web3modal/html"),require("js-event-bus")):typeof define=="function"&&define.amd?define(["exports","@wagmi/core/chains","vue","@wagmi/core","@web3modal/ethereum","@web3modal/html","js-event-bus"],p):(a=typeof globalThis<"u"?globalThis:a||self,p(a["vue-web3-auth"]={},a.wagmiCoreChains,a.vue,a.wagmiCore,a.web3modalEthereum,a.web3modalHtml,a.jsEventBus))})(this,function(a,p,s,b,g,j,E){"use strict";function I(e){const t=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(e){for(const i in e)if(i!=="default"){const c=Object.getOwnPropertyDescriptor(e,i);Object.defineProperty(t,i,c.get?c:{enumerable:!0,get:()=>e[i]})}}return t.default=e,Object.freeze(t)}const S=I(p);var v={id:1,network:"homestead",name:"Ethereum",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:{alchemy:{http:["https://eth-mainnet.g.alchemy.com/v2"],webSocket:["wss://eth-mainnet.g.alchemy.com/v2"]},infura:{http:["https://mainnet.infura.io/v3"],webSocket:["wss://mainnet.infura.io/ws/v3"]},default:{http:["https://cloudflare-eth.com"]},public:{http:["https://cloudflare-eth.com"]}},blockExplorers:{etherscan:{name:"Etherscan",url:"https://etherscan.io"},default:{name:"Etherscan",url:"https://etherscan.io"}},contracts:{ensRegistry:{address:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"},ensUniversalResolver:{address:"0xc0497E381f536Be9ce14B0dD3817cBcAe57d2F62",blockCreated:16966585},multicall3:{address:"0xca11bde05977b3631167028862be2a173976ca11",blockCreated:14353601}}};function K(e){return e}const D=v,n=s.reactive({autoInit:!0,projectId:"",chains:[D],autoConnect:!0,disconnectUnknownChain:!0,reconnectToChain:!0,logEnabled:!1,web3modalOptions:{themeMode:"light",themeVariables:{}}});function U(e){"autoInit"in e&&(n.autoInit=e.autoInit),"projectId"in e&&(n.projectId=e.projectId),"chains"in e&&(n.chains=e.chains),"autoConnect"in e&&(n.autoConnect=e.autoConnect),"disconnectUnknownChain"in e&&(n.disconnectUnknownChain=e.disconnectUnknownChain),"reconnectToChain"in e&&(n.reconnectToChain=e.reconnectToChain),"logEnabled"in e&&(n.logEnabled=e.logEnabled),"web3modalOptions"in e&&("themeMode"in e.web3modalOptions&&(n.web3modalOptions.themeMode=e.web3modalOptions.themeMode),"themeVariables"in e.web3modalOptions&&(n.web3modalOptions.themeVariables=e.web3modalOptions.themeVariables))}const d=s.reactive({bufferChain:null,currentChain:null}),N=s.computed(()=>d.currentChain?d.currentChain:n.chains[0]);function A(){return n.chains}async function H(e){var t;l.value||C(),await((t=M.client)==null?void 0:t.switchNetwork({chainId:e.id}))}async function _(){var e;l.value||C(),await((e=l.value)==null?void 0:e.openModal({route:"SelectNetwork"}))}function u(...e){n.logEnabled&&console.log("[WC]",...e)}var o=(e=>(e.Connected="connected",e.Disconnected="disconnect",e.ChainSwitched="chain_switched",e.UnknownChain="unknown_chain",e.ModalStateChanged="modal_state_changed",e))(o||{});const w=new E;function r(e,...t){e===o.Connected||e===o.Disconnected?(d.currentChain=d.bufferChain,h.currentAccount=h.bufferAccount):e===o.ChainSwitched&&(d.currentChain=d.bufferChain),w.emit(e,null,...t)}function q(e,t){w.on(e,t),n.logEnabled&&u(`Subscribe for ${e} event.`)}function F(e,t){w.detach(e,t),n.logEnabled&&u(`Unsubscribe for ${e} event.`)}const l=s.ref(null);function W(e){var t;l.value=new j.Web3Modal({projectId:n.projectId,...(n==null?void 0:n.web3modalOptions)||[]},e),(t=l.value)==null||t.subscribeModal(({open:i})=>{r(o.ModalStateChanged,i)})}const h=s.reactive({bufferAccount:null,currentAccount:null}),m=s.reactive({connected:!1,address:void 0,shortAddress:void 0});async function k(){await b.disconnect()}async function R(e){var t,i;l.value||C(),e instanceof Event&&(e=n.chains[0]),(t=l.value)==null||t.setDefaultChain(e||n.chains[0]),await((i=l.value)==null?void 0:i.openModal({route:"ConnectWallet"}))}async function L(){var e;l.value||C(),await((e=l.value)==null?void 0:e.openModal({route:"Account"}))}function T(e=""){return`${e.slice(0,5)}...${e.slice(-4)}`}s.watch(()=>h.currentAccount,e=>{e?(m.connected=!0,m.address=e.address,m.shortAddress=T(e.address)):(m.connected=!1,m.address=void 0,m.shortAddress=void 0)});let $;const M=s.reactive({client:null});function y(e){return String(e).toLowerCase()}async function P([e,t],[i,c]){if(n.disconnectUnknownChain&&(!i&&n.disconnectUnknownChain||i)&&t&&!n.chains.some(f=>f.id===t.id)){await k(),c&&(r(o.Disconnected),u(`account ${e.address} disconnected from ${y(c.name)} chain.`)),r(o.UnknownChain,{chain:t}),u("switched to unsupported chain.");return}(i==null?void 0:i.address)!==(e==null?void 0:e.address)&&!(c!=null&&c.unsupported)&&(i&&(r(o.Disconnected),u(`account ${i.address} disconnected from ${y(c.name)} chain.`)),e&&(r(o.Connected,{chain:d.bufferChain,account:h.bufferAccount}),u(`account ${e.address} connected to ${y(t.name)} chain.`))),c&&t&&c.id!==t.id&&(n.reconnectToChain?(r(o.Disconnected),u(`account ${i.address} disconnected from ${y(c.name)} chain.`),r(o.Connected,{chain:d.bufferChain,account:h.bufferAccount}),u(`account ${e.address} connected to ${y(t.name)} chain.`)):(r(o.ChainSwitched,{chain:t}),u(`account ${e.address} switched to ${y(t.name)} chain.`)))}function V([e,t],[i,c]){clearTimeout($),$=setTimeout(P,200,[e,t],[i,c])}function C(){if(l.value)return;const{publicClient:e}=b.configureChains(s.toRaw(n.chains),[g.w3mProvider({projectId:n.projectId})]),t=b.createConfig({autoConnect:n.autoConnect,connectors:g.w3mConnectors({projectId:n.projectId,version:2,chains:s.toRaw(n.chains)}),publicClient:e});b.watchNetwork(c=>{var f;(f=c.chain)!=null&&f.unsupported&&(c.chain.name="Unsupported"),d.bufferChain=c.chain||null}),b.watchAccount(c=>{h.bufferAccount=c.address?c:null}),s.watch([()=>h.bufferAccount,()=>d.bufferChain],V);const i=new g.EthereumClient(t,s.toRaw(n.chains));M.client=i,W(i)}function z(e){return{install(){U(e),C()}}}const G=[{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall.Call[]",name:"calls",type:"tuple[]"}],name:"aggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes[]",name:"returnData",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockCoinbase",outputs:[{internalType:"address",name:"coinbase",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockDifficulty",outputs:[{internalType:"uint256",name:"difficulty",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockGasLimit",outputs:[{internalType:"uint256",name:"gaslimit",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockTimestamp",outputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"getEthBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"}];async function J(e){const t=[];return e.calls.forEach(i=>{i.calls.forEach(([c,f])=>{t.push({address:i.contractAddress,abi:i.abi,functionName:c,args:f})})}),await b.multicall({chainId:e.chainId,contracts:t,multicallAddress:e.multicallAddress,blockTag:e.blockTag,blockNumber:e.blockNumber,batchSize:e.batchSize,allowFailure:e.allowFailure})}a.Chains=S,a.$off=F,a.$on=q,a.Event=o,a.MulticallAbi=G,a.account=m,a.accountDetails=L,a.chain=N,a.connect=R,a.createWeb3Auth=z,a.disconnect=k,a.getAvailableChains=A,a.multicall=J,a.selectChain=_,a.shortAddressFilter=T,a.switchChain=H,Object.defineProperty(a,Symbol.toStringTag,{value:"Module"})});
