(function(t,f){typeof exports=="object"&&typeof module<"u"?f(exports,require("@wagmi/core/chains"),require("vue"),require("@wagmi/core"),require("@web3modal/ethereum"),require("@web3modal/html"),require("js-event-bus")):typeof define=="function"&&define.amd?define(["exports","@wagmi/core/chains","vue","@wagmi/core","@web3modal/ethereum","@web3modal/html","js-event-bus"],f):(t=typeof globalThis<"u"?globalThis:t||self,f(t["vue-web3-auth"]={},t.wagmiCoreChains,t.vue,t.wagmiCore,t.web3modalEthereum,t.web3modalHtml,t.jsEventBus))})(this,function(t,f,o,l,T,$,P){"use strict";function j(e){const n=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(e){for(const i in e)if(i!=="default"){const s=Object.getOwnPropertyDescriptor(e,i);Object.defineProperty(n,i,s.get?s:{enumerable:!0,get:()=>e[i]})}}return n.default=e,Object.freeze(n)}const E=j(f);var S={id:1,network:"homestead",name:"Ethereum",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:{alchemy:{http:["https://eth-mainnet.g.alchemy.com/v2"],webSocket:["wss://eth-mainnet.g.alchemy.com/v2"]},infura:{http:["https://mainnet.infura.io/v3"],webSocket:["wss://mainnet.infura.io/ws/v3"]},default:{http:["https://cloudflare-eth.com"]},public:{http:["https://cloudflare-eth.com"]}},blockExplorers:{etherscan:{name:"Etherscan",url:"https://etherscan.io"},default:{name:"Etherscan",url:"https://etherscan.io"}},contracts:{ensRegistry:{address:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"},ensUniversalResolver:{address:"0xc0497E381f536Be9ce14B0dD3817cBcAe57d2F62",blockCreated:16966585},multicall3:{address:"0xca11bde05977b3631167028862be2a173976ca11",blockCreated:14353601}}};function X(e){return e}const F=S,a=o.reactive({autoInit:!0,projectId:"",chains:[F],autoConnect:!0,disconnectUnknownChain:!0,reconnectToChain:!0,logEnabled:!1,web3modalOptions:{themeMode:"light",themeVariables:{}}});function N(e){"autoInit"in e&&(a.autoInit=e.autoInit),"projectId"in e&&(a.projectId=e.projectId),"chains"in e&&(a.chains=e.chains),"autoConnect"in e&&(a.autoConnect=e.autoConnect),"disconnectUnknownChain"in e&&(a.disconnectUnknownChain=e.disconnectUnknownChain),"reconnectToChain"in e&&(a.reconnectToChain=e.reconnectToChain),"logEnabled"in e&&(a.logEnabled=e.logEnabled),"web3modalOptions"in e&&("themeMode"in e.web3modalOptions&&(a.web3modalOptions.themeMode=e.web3modalOptions.themeMode),"themeVariables"in e.web3modalOptions&&(a.web3modalOptions.themeVariables=e.web3modalOptions.themeVariables))}const u=o.reactive({bufferChain:null,currentChain:null}),C=o.computed(()=>u.currentChain?u.currentChain:a.chains[0]);function D(){return a.chains}async function _(e){var n;r.value||g(),await((n=I.client)==null?void 0:n.switchNetwork({chainId:e.id}))}async function G(){var e;r.value||g(),await((e=r.value)==null?void 0:e.openModal({route:"SelectNetwork"}))}function m(...e){a.logEnabled&&console.log("[WC]",...e)}var c=(e=>(e.Connected="connected",e.Disconnected="disconnect",e.ChainSwitched="chain_switched",e.UnknownChain="unknown_chain",e.ModalStateChanged="modal_state_changed",e))(c||{});const w=new P;function y(e,...n){e===c.Connected||e===c.Disconnected?(u.currentChain=u.bufferChain,p.currentAccount=p.bufferAccount):e===c.ChainSwitched&&(u.currentChain=u.bufferChain),w.emit(e,null,...n)}function U(e,n){w.on(e,n),a.logEnabled&&m(`Subscribe for ${e} event.`)}function A(e,n){w.detach(e,n),a.logEnabled&&m(`Unsubscribe for ${e} event.`)}const r=o.ref(null);function W(e){var n;r.value=new $.Web3Modal({projectId:a.projectId,...(a==null?void 0:a.web3modalOptions)||[]},e),(n=r.value)==null||n.subscribeModal(({open:i})=>{y(c.ModalStateChanged,i)})}const p=o.reactive({bufferAccount:null,currentAccount:null}),d=o.reactive({connected:!1,address:void 0,shortAddress:void 0});async function k(){await l.disconnect()}async function H(e){var n,i;r.value||g(),e instanceof Event&&(e=a.chains[0]),(n=r.value)==null||n.setDefaultChain(e||a.chains[0]),await((i=r.value)==null?void 0:i.openModal({route:"ConnectWallet"}))}async function q(){var e;r.value||g(),await((e=r.value)==null?void 0:e.openModal({route:"Account"}))}function M(e=""){return`${e.slice(0,5)}...${e.slice(-4)}`}o.watch(()=>p.currentAccount,e=>{e?(d.connected=!0,d.address=e.address,d.shortAddress=M(e.address)):(d.connected=!1,d.address=void 0,d.shortAddress=void 0)});let v;const I=o.reactive({client:null});function b(e){return String(e).toLowerCase()}async function R([e,n],[i,s]){if(a.disconnectUnknownChain&&(!i&&a.disconnectUnknownChain||i)&&n&&!a.chains.some(h=>h.id===n.id)){await k(),s&&(y(c.Disconnected),m(`account ${e.address} disconnected from ${b(s.name)} chain.`)),y(c.UnknownChain,{chain:n}),m("switched to unsupported chain.");return}(i==null?void 0:i.address)!==(e==null?void 0:e.address)&&!(s!=null&&s.unsupported)&&(i&&(y(c.Disconnected),m(`account ${i.address} disconnected from ${b(s.name)} chain.`)),e&&(y(c.Connected,{chain:u.bufferChain,account:p.bufferAccount}),m(`account ${e.address} connected to ${b(n.name)} chain.`))),s&&n&&s.id!==n.id&&(a.reconnectToChain?(y(c.Disconnected),m(`account ${i.address} disconnected from ${b(s.name)} chain.`),y(c.Connected,{chain:u.bufferChain,account:p.bufferAccount}),m(`account ${e.address} connected to ${b(n.name)} chain.`)):(y(c.ChainSwitched,{chain:n}),m(`account ${e.address} switched to ${b(n.name)} chain.`)))}function V([e,n],[i,s]){clearTimeout(v),v=setTimeout(R,200,[e,n],[i,s])}function g(){if(r.value)return;const{publicClient:e}=l.configureChains(o.toRaw(a.chains),[T.w3mProvider({projectId:a.projectId})]),n=l.createConfig({autoConnect:a.autoConnect,connectors:T.w3mConnectors({projectId:a.projectId,version:2,chains:o.toRaw(a.chains)}),publicClient:e});l.watchNetwork(s=>{var h;(h=s.chain)!=null&&h.unsupported&&(s.chain.name="Unsupported"),u.bufferChain=s.chain||null}),l.watchAccount(s=>{p.bufferAccount=s.address?s:null}),o.watch([()=>p.bufferAccount,()=>u.bufferChain],V);const i=new T.EthereumClient(n,o.toRaw(a.chains));I.client=i,W(i)}function L(e){return{install(){N(e),g()}}}async function z(e){return l.readContract({chainId:e.chainId||C.value.id,address:e.address,abi:e.abi,functionName:e.functionName,args:e.args||[],account:e.account||d.address,blockNumber:e.blockNumber,blockTag:e.blockTag})}async function x(e){const{hash:n}=await l.writeContract({chainId:e.chainId||C.value.id,address:e.address,abi:e.abi,functionName:e.functionName,args:e.args||[],account:e.account||d.address,gas:e.gas,gasPrice:e.gasPrice,maxFeePerGas:e.maxFeePerGas,maxPriorityFeePerGas:e.maxPriorityFeePerGas,nonce:e.nonce,value:e.value});return l.waitForTransaction({chainId:e.chainId||C.value.id,hash:n,confirmations:e.confirmations||1})}async function J(e){return await l.getPublicClient({chainId:e.chainId||C.value.id}).estimateContractGas({address:e.address,abi:e.abi,functionName:e.functionName,args:e.args||[],account:e.account||d.address,gasPrice:e.gasPrice,maxFeePerGas:e.maxFeePerGas,maxPriorityFeePerGas:e.maxPriorityFeePerGas,nonce:e.nonce,value:e.value})}async function K(e){const n=[];return e.calls.forEach(i=>{i.calls.forEach(([s,h])=>{n.push({address:i.contractAddress,abi:i.abi,functionName:s,args:h})})}),await l.multicall({chainId:e.chainId,contracts:n,multicallAddress:e.multicallAddress,blockTag:e.blockTag,blockNumber:e.blockNumber,batchSize:e.batchSize,allowFailure:e.allowFailure})}const O=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"},{internalType:"uint8",name:"decimals_",type:"uint8"},{internalType:"uint256",name:"initialBalance_",type:"uint256"},{internalType:"address payable",name:"feeReceiver_",type:"address"}],stateMutability:"payable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],Q=[{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall.Call[]",name:"calls",type:"tuple[]"}],name:"aggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes[]",name:"returnData",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockCoinbase",outputs:[{internalType:"address",name:"coinbase",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockDifficulty",outputs:[{internalType:"uint256",name:"difficulty",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockGasLimit",outputs:[{internalType:"uint256",name:"gaslimit",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockTimestamp",outputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"getEthBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"}];t.Chains=E,t.$off=A,t.$on=U,t.Events=c,t.account=d,t.accountDetails=q,t.chain=C,t.connect=H,t.createWeb3Auth=L,t.disconnect=k,t.erc20ABI=O,t.estimateWriteContractGas=J,t.getAvailableChains=D,t.multicall=K,t.multicallABI=Q,t.readContract=z,t.selectChain=G,t.shortAddressFilter=M,t.switchChain=_,t.writeContract=x,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});
